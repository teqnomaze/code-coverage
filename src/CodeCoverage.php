<?php
/**
 * The CodeCoverage class file.
 *
 * @package Coverage
 */

namespace Teqnomaze\Coverage;

/**
 * The CodeCoverage class.
 */
class CodeCoverage
{
    /**
     * The location of `clover.xml` file, that's generated by phpunit.
     *
     * @var string $clover
     */
    private $clover = null;

    /**
     * The coverage threshold percentage that's acceptable (Min = 1, Max = 100).
     *
     * @var int $threshold
     */
    private $threshold = null;

    /**
     * The coverage output message.
     *
     * @var string $message
     */
    private $message = null;

    /**
     * The console output status.
     *
     * @var int $status
     */
    private $status = 0;

    /**
     * Initiate class object with default parameters.
     *
     * @param string $clover    The clover.xml file path.
     * @param int    $threshold The coverage threshold percentage.
     */
    public function __construct(string $clover, int $threshold)
    {
        $this->clover    = $clover;
        $this->threshold = min(100, max(0, $threshold));
    }

    /**
     * Run the coverage check.
     *
     * @return self
     * @throws \InvalidArgumentException Throws file not found exception.
     */
    public function check(): self
    {
        if (empty($this->clover) || !file_exists($this->clover)) {
            throw new \InvalidArgumentException('The clover.xml file not provided or not found!');
        }

        $metrics = (new \SimpleXMLElement(file_get_contents($this->clover)))->xpath('//metrics');
        $total   = 0;
        $checked = 0;

        foreach ($metrics as $metric) {
            $total   += (int)$metric['elements'];
            $checked += (int)$metric['coveredelements'];
        }

        $percentage = (int)$this->threshold;
        $coverage   = round(($checked / $total) * 100);

        if ($coverage < $percentage) {
            $this->status  = 1;
            $this->message = 'Code coverage is ' . $coverage . '%, which is below the accepted ' . $percentage . '%';
        } else {
            $this->status  = 0;
            $this->message = 'Code coverage is ' . $coverage . '%, which is above the accepted ' . $percentage . '%';
        }

        return $this;
    }

    /**
     * Print the coverage result output.
     *
     * @param bool $print Flag for echo the output.
     *
     * @return null|string
     */
    public function output(bool $print = true): ?string
    {
        if ($print) {
            echo $this->message . PHP_EOL;
            exit($this->status);
        }

        return $this->message;
    }
}
